//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://confluence.real.com/", ConfigurationName="VMHostService")]
public interface VMHostService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/PowerOn", ReplyAction="http://confluence.real.com/VMHostService/PowerOnResponse")]
    void PowerOn(string macAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/PowerOn", ReplyAction="http://confluence.real.com/VMHostService/PowerOnResponse")]
    System.Threading.Tasks.Task PowerOnAsync(string macAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/PowerOff", ReplyAction="http://confluence.real.com/VMHostService/PowerOffResponse")]
    void PowerOff(string macAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/PowerOff", ReplyAction="http://confluence.real.com/VMHostService/PowerOffResponse")]
    System.Threading.Tasks.Task PowerOffAsync(string macAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/Restore", ReplyAction="http://confluence.real.com/VMHostService/RestoreResponse")]
    void Restore(string macAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/Restore", ReplyAction="http://confluence.real.com/VMHostService/RestoreResponse")]
    System.Threading.Tasks.Task RestoreAsync(string macAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/IsPowerOn", ReplyAction="http://confluence.real.com/VMHostService/IsPowerOnResponse")]
    bool IsPowerOn(string macAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/IsPowerOn", ReplyAction="http://confluence.real.com/VMHostService/IsPowerOnResponse")]
    System.Threading.Tasks.Task<bool> IsPowerOnAsync(string macAddress);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/UpdateVMInfo", ReplyAction="http://confluence.real.com/VMHostService/UpdateVMInfoResponse")]
    void UpdateVMInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://confluence.real.com/VMHostService/UpdateVMInfo", ReplyAction="http://confluence.real.com/VMHostService/UpdateVMInfoResponse")]
    System.Threading.Tasks.Task UpdateVMInfoAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface VMHostServiceChannel : VMHostService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class VMHostServiceClient : System.ServiceModel.ClientBase<VMHostService>, VMHostService
{
    
    public VMHostServiceClient()
    {
    }
    
    public VMHostServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public VMHostServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public VMHostServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public VMHostServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void PowerOn(string macAddress)
    {
        base.Channel.PowerOn(macAddress);
    }
    
    public System.Threading.Tasks.Task PowerOnAsync(string macAddress)
    {
        return base.Channel.PowerOnAsync(macAddress);
    }
    
    public void PowerOff(string macAddress)
    {
        base.Channel.PowerOff(macAddress);
    }
    
    public System.Threading.Tasks.Task PowerOffAsync(string macAddress)
    {
        return base.Channel.PowerOffAsync(macAddress);
    }
    
    public void Restore(string macAddress)
    {
        base.Channel.Restore(macAddress);
    }
    
    public System.Threading.Tasks.Task RestoreAsync(string macAddress)
    {
        return base.Channel.RestoreAsync(macAddress);
    }
    
    public bool IsPowerOn(string macAddress)
    {
        return base.Channel.IsPowerOn(macAddress);
    }
    
    public System.Threading.Tasks.Task<bool> IsPowerOnAsync(string macAddress)
    {
        return base.Channel.IsPowerOnAsync(macAddress);
    }
    
    public void UpdateVMInfo()
    {
        base.Channel.UpdateVMInfo();
    }
    
    public System.Threading.Tasks.Task UpdateVMInfoAsync()
    {
        return base.Channel.UpdateVMInfoAsync();
    }
}
